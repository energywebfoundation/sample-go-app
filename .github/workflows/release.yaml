# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Create and publish a Docker image

on:
  push:
    branches: ['develop', 'master', 'release']
    paths-ignore:
      - helm/**
      - docs/**
      - README.md
      - .github/workflows/release-helm.yaml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  # Configures env variables based on current branch
  configure:
    name: Configure variables
    runs-on: ubuntu-latest
    outputs:
      ENVIRONMENT: ${{ steps.configure.outputs.ENVIRONMENT }}
      PRERELEASE: ${{ steps.configure.outputs.PRERELEASE }}
      IMAGE_TAG: ${{ steps.configure.outputs.IMAGE_TAG }}
      TAG_DRY_RUN: ${{ steps.configure.outputs.TAG_DRY_RUN }}
    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - id: configure
        run: |
              echo "Running on branch ${{ github.ref }}"
              if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
                echo "ENVIRONMENT=dev" >> $GITHUB_OUTPUT
                echo "PRERELEASE=true" >> $GITHUB_OUTPUT
                echo "IMAGE_TAG=$(uuidgen)" >> $GITHUB_OUTPUT
                echo "TAG_DRY_RUN=true" >> $GITHUB_OUTPUT
              elif [ "${{ github.ref }}" = "refs/heads/master" ]; then
                echo "ENVIRONMENT=staging" >> $GITHUB_OUTPUT
                echo "PRERELEASE=true" >> $GITHUB_OUTPUT
                echo "IMAGE_TAG=staging" >> $GITHUB_OUTPUT
                echo "TAG_DRY_RUN=false" >> $GITHUB_OUTPUT
              elif [ "${{ github.ref }}" = "refs/heads/release" ]; then
                echo "ENVIRONMENT=prod" >> $GITHUB_OUTPUT
                echo "PRERELEASE=false" >> $GITHUB_OUTPUT
                echo "IMAGE_TAG=latest" >> $GITHUB_OUTPUT
                echo "TAG_DRY_RUN=false" >> $GITHUB_OUTPUT
              else
                echo "Branch not configured"
                exit 1
              fi

  tag-release:
    name: Push tag and create release
    runs-on: ubuntu-latest
    needs: [configure]
    outputs:
      # new_version: ${{ steps.tag_version.outputs.new_version }}
      tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: release
          pre_release_branches: master,develop
          custom_release_rules: major:major:Major Changes,minor:minor:Minor Changes,chore:patch:Chores
          dry_run: ${{  needs.configure.outputs.TAG_DRY_RUN  }}

      - name: Create a GitHub release
        if: github.ref == 'refs/heads/master' && github.ref == 'refs/heads/release'
        uses: ncipollo/release-action@v1.12.0
        with:
          prerelease: ${{  needs.configure.outputs.PRERELEASE  }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  # release:
  #   name: Create Github Release
  #   runs-on: ubuntu-latest
  #   needs: [push-tag]

  #   steps:
  #     - name: Create a GitHub release
  #       uses: ncipollo/release-action@v1.12.0
  #       with:
  #         prerelease: true
  #         tag: ${{  needs.push-tag.outputs.tag  }}
  #         name: Release ${{  needs.push-tag.outputs.tag  }}
  #         body: ${{  needs.push-tag.outputs.changelog  }}

  build-and-push-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: [tag-release, configure]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{  needs.configure.outputs.IMAGE_TAG  }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{  needs.tag-release.outputs.tag  }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./docker/Dockerfile
